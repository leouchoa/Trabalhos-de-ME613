hd = c("ID", "County", "State", "Land_Area", "Total_Pop", "Pct_18_34", "Pct_65Plus", "num_Phys", "num_Beds", "Total_Crimes", "Pct_HSG", "Pct_Bdgree", "Pct_Below_Poverty_Level", "Pct_Unemployment", "PCI", "Total_Person_Inc", "Geographic_Region")
CDI = read.table(file = "/home/leouchoa/Documents/papers/2016-1/regressao/codes/teste07/APPENC02.txt", header=F, col.names = hd)
str(CDI)
CDI
detach(CDI)
attach(CDI)
attach(CDI)
County
County
vetor.ex143 = data.frame(Total_Pop, num_Beds, Total_Person_Inc)
head(vetor.ex143)
modelo.ex143 = vector("list", length(vetor.ex143))
modelo.ex143
betas.ex143 = matrix(nrow = length(modelo.ex143), ncol = 2)
betas.ex143
mse.ex143 = rep(0,length(modelo.ex143))
mse.ex143
r.squared.ex143 = rep(0,length(modelo.ex143)) # 2.62 #
r.squared.ex143
residual.ex325 = vector("list", length(modelo.ex143)) # 3.25 #
residual.ex325
length(modelo.ex143)
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))}
modelo.ex143
par(pty="s")
plot(x = data.matrix(vetor.ex143[i]), y = num_Phys)
help par
modelo.ex143[1]
modelo.ex143[[1]]
modelo.ex143[[1]][1]
modelo.ex143[[1]][[1]]
str(modelo.ex143)
typeof(modelo.ex143)
betas.ex143[i,] = coef(modelo.ex143[[i]])
betas.ex143
betas.ex143[1,] = coef(modelo.ex143[[1]])
betas.ex143
summary(modelo.ex143)
summary(modelo.ex143)
summary(modelo.ex143[1])
summary(modelo.ex143)[1]
summary(modelo.ex143)[2]
modelo.ex143
modelo.ex143[[1]]
summary(modelo.ex143[[1]])
summary(modelo.ex143[[1]])$sigma
summary(modelo.ex143[[1]])$sigma^2
summary(modelo.ex143[[1]])$r.squared
rm(betas.ex143,vetor.ex143,i,modelo.ex143,mse.ex143,r.squared.ex143,residual.ex325)
attach(CDI)
detach(CDI)
attach(CDI)
vetor.ex143 = data.frame(Total_Pop, num_Beds, Total_Person_Inc)
modelo.ex143 = vector("list", length(vetor.ex143))
betas.ex143 = matrix(nrow = length(modelo.ex143), ncol = 2)
mse.ex143 = rep(0,length(modelo.ex143))
r.squared.ex143 = rep(0,length(modelo.ex143)) # 2.62 #
residual.ex325 = vector("list", length(modelo.ex143)) # 3.25 #
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))
par(pty="s")
plot(x = data.matrix(vetor.ex143[i]), y = num_Phys)
abline(modelo.ex143[[i]])
plot(modelo.ex143[[i]], which = c(1,2))
betas.ex143[i,] = coef(modelo.ex143[[i]])
mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
r.squared.ex143[i] = summary(modelo.ex143[[i]])$r.squared # 2.62 #
residual.ex325[[i]] = num_Phys - (betas.ex143[i,1] + betas.ex143[i,2]*data.matrix(vetor.ex143[i])) # 3.25 #
#plot(data.matrix(vetor.ex143[i]), residual.ex325[[i]])
}
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))
par(pty="s")
plot(x = data.matrix(vetor.ex143[i]), y = num_Phys)
abline(modelo.ex143[[i]])
plot(modelo.ex143[[i]], which = c(1,2))
betas.ex143[i,] = coef(modelo.ex143[[i]])
mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
r.squared.ex143[i] = summary(modelo.ex143[[i]])$r.squared # 2.62 #
residual.ex325[[i]] = num_Phys - (betas.ex143[i,1] + betas.ex143[i,2]*data.matrix(vetor.ex143[i])) # 3.25 #
#plot(data.matrix(vetor.ex143[i]), residual.ex325[[i]])
}
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))
par(pty="s")
plot(x = data.matrix(vetor.ex143[i]), y = num_Phys)
abline(modelo.ex143[[i]])
plot(modelo.ex143[[i]], which = c(1,2))
betas.ex143[i,] = coef(modelo.ex143[[i]])
mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
r.squared.ex143[i] = summary(modelo.ex143[[i]])$r.squared # 2.62 #
residual.ex325[[i]] = num_Phys - (betas.ex143[i,1] + betas.ex143[i,2]*data.matrix(vetor.ex143[i])) # 3.25 #
#plot(data.matrix(vetor.ex143[i]), residual.ex325[[i]])
}
modelo.ex144 = vector("list", max(Geographic_Region))
betas.ex144 = matrix(nrow = length(modelo.ex144), ncol = 2)
mse.ex144 = rep(0,length(modelo.ex144))
ic.beta1 = function(beta1, s, dgf){
alfa = 0.1
return ( beta1 + c(-1, 1)*qt(1 - alfa/2, dgf)*s )
}
ic.beta1
require(datasets)
require(datasets)
data("swiss")
data(swiss)
require(datasets); data(swiss)
head(swiis)
head(swiss)
?swiss
head(swiss)
str(swiss)
Fertility
attach(swiss)
Fertility
?history
swiss[1,]
swiss[,1]
modelo = lm(Fertility ~ . , data = swiss)
modelo
str(modelo)
summary(modelo)
sum(summary(modelo)[,3])
sum(summary(modelo)[[,3]])
summary(modelo)[3]
summary(modelo)[3,]
summary(modelo)[[3]]
typeof(summary(modelo))
summary(modelo)[1]
summary(modelo)[2]
summary(modelo)[3]
summary(modelo)[4]
summary(modelo)[5]
summary(modelo)[6]
summary(modelo)[7]
summary(modelo)[8]
summary(modelo)[9]
summary(modelo)[10]
str(summary(modelo))
summary(modelo)
summary(modelo)$coef
summary(modelo)$coef[,3]
sum(summary(modelo)$coef[,3])
library(dplyr)
library("dplyr")
installed.packages("dplyr")
install.packages("dplyr")
library("plyr")
?mutate
swiss = mutate(swiss, CatholicBin = 1*(Catholic > 50))
attach(swiss)
Catholic
CatholicBin
