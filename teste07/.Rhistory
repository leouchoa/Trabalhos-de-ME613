mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
r.squared.ex143[i] = summary(modelo.ex143[[i]])$r.squared # 2.62 #
residual.ex325[[i]] = num_Phys - (betas.ex143[i,1] + betas.ex143[i,2]*data.matrix(vetor.ex143[i])) # 3.25 #
#plot(data.matrix(vetor.ex143[i]), residual.ex325[[i]])
}
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))
par(pty="s")
plot(x = data.matrix(vetor.ex143[i]), y = num_Phys)
abline(modelo.ex143[[i]])
plot(modelo.ex143[[i]], which = c(1,2))
betas.ex143[i,] = coef(modelo.ex143[[i]])
mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
r.squared.ex143[i] = summary(modelo.ex143[[i]])$r.squared # 2.62 #
residual.ex325[[i]] = num_Phys - (betas.ex143[i,1] + betas.ex143[i,2]*data.matrix(vetor.ex143[i])) # 3.25 #
#plot(data.matrix(vetor.ex143[i]), residual.ex325[[i]])
}
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))
par(pty="s")
plot(x = data.matrix(vetor.ex143[i]), y = num_Phys)
abline(modelo.ex143[[i]])
plot(modelo.ex143[[i]], which = c(1,2))
betas.ex143[i,] = coef(modelo.ex143[[i]])
mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
r.squared.ex143[i] = summary(modelo.ex143[[i]])$r.squared # 2.62 #
residual.ex325[[i]] = num_Phys - (betas.ex143[i,1] + betas.ex143[i,2]*data.matrix(vetor.ex143[i])) # 3.25 #
#plot(data.matrix(vetor.ex143[i]), residual.ex325[[i]])
}
modelo.ex144 = vector("list", max(Geographic_Region))
betas.ex144 = matrix(nrow = length(modelo.ex144), ncol = 2)
mse.ex144 = rep(0,length(modelo.ex144))
ic.beta1 = function(beta1, s, dgf){
alfa = 0.1
return ( beta1 + c(-1, 1)*qt(1 - alfa/2, dgf)*s )
}
ic.beta1
require(datasets)
require(datasets)
data("swiss")
data(swiss)
require(datasets); data(swiss)
head(swiis)
head(swiss)
?swiss
head(swiss)
str(swiss)
Fertility
attach(swiss)
Fertility
?history
swiss[1,]
swiss[,1]
modelo = lm(Fertility ~ . , data = swiss)
modelo
str(modelo)
summary(modelo)
sum(summary(modelo)[,3])
sum(summary(modelo)[[,3]])
summary(modelo)[3]
summary(modelo)[3,]
summary(modelo)[[3]]
typeof(summary(modelo))
summary(modelo)[1]
summary(modelo)[2]
summary(modelo)[3]
summary(modelo)[4]
summary(modelo)[5]
summary(modelo)[6]
summary(modelo)[7]
summary(modelo)[8]
summary(modelo)[9]
summary(modelo)[10]
str(summary(modelo))
summary(modelo)
summary(modelo)$coef
summary(modelo)$coef[,3]
sum(summary(modelo)$coef[,3])
library(dplyr)
library("dplyr")
installed.packages("dplyr")
install.packages("dplyr")
library("plyr")
?mutate
swiss = mutate(swiss, CatholicBin = 1*(Catholic > 50))
attach(swiss)
Catholic
CatholicBin
hd = c("ID", "County", "State", "Land_Area", "Total_Pop", "Pct_18_34", "Pct_65Plus", "num_Phys", "num_Beds", "Total_Crimes", "Pct_HSG", "Pct_Bdgree", "Pct_Below_Poverty_Level", "Pct_Unemployment", "PCI", "Total_Person_Inc", "Geographic_Region")
CDI = read.table(file = "/home/leouchoa/Documents/papers/2016-1/regressao/codes/teste07/APPENC02.txt", header=F, col.names = hd)
#CDI = read.table(file = "http://www.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Appendix%20C%20Data%20Sets/APPENC02.txt", header=F, col.names = hd)
attach(CDI)
vetor.ex143 = data.frame(Total_Pop, num_Beds, Total_Person_Inc)
modelo.ex143 = vector("list", length(vetor.ex143))
betas.ex143 = matrix(nrow = length(modelo.ex143), ncol = 2)
mse.ex143 = rep(0,length(modelo.ex143))
for(i in 1:length(modelo.ex143)){
modelo.ex143[[i]] = lm(num_Phys ~ data.matrix(vetor.ex143[i]))
betas.ex143[i,] = coef(modelo.ex143[[i]])
mse.ex143[i] = summary(modelo.ex143[[i]])$sigma^2
}
betas.ex143
m = length(betas.ex143[1,])
alfa = 0.05
IC.bonf = matrix(nrow = m, ncol = 2)
colnames(IC.bonf) = c("Lower Bound", "Upper Bound")
rownames(IC.bonf) = c("Intercept", "Slope")
for (i in 1:m)
IC.bonf[i,] = betas.ex143[1,i] + c(-1,1)*summary(modelo.ex143[[1]])$coef[i,2]*qt(1-alfa/(2*m), df = summary(modelo.ex143[[1]])$df[2])
round(IC.bonf, digits=6)
alfa=.1
g=3
(B = qt(1-alfa/(2*g) ,df=summary(modelo.ex143[[1]])$df[2]))
(W = sqrt(g*qf(1-alfa ,g ,summary(modelo.ex143[[1]])$df[2])))
X_h = c(500,1000,5000)
beta.ex426 = lm(num_Phys ~ Total_Pop)
y.hat = rep(0,length(X_h))
for (i in 1:length(X_h)){
y.hat[i] = beta.ex426$coefficients[[1]] + beta.ex426$coefficients[[2]]*X_h[i]
}
y.hat
n=nrow(CDI)
v_y.hat = rep(0,length=length(X_h))
MSE2 = summary(beta.ex426)$sigma
Sxx  = sum((Total_Pop - mean(Total_Pop))^2)
for (i in 1:length(X_h)) {
v_y.hat[i] = sqrt(MSE2*(1/g + 1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
IC.ex426c = matrix(nrow = length(X_h),ncol = 2)
rownames(IC.ex426c) = c("X_1","X_2","X_3")
colnames(IC.ex426c) = c("lower","upper")
for (i in 1:length(X_h)) {
IC.ex426c[i,] = y.hat[i] + c(-1,1)*B*v_y.hat[i]
}
IC.ex426c
v_y.hat
MSE2
sqrt(MSE2)
n=nrow(CDI)
v_y.hat = rep(0,length=length(X_h))
MSE2 = summary(beta.ex426)$sigma
Sxx  = sum((Total_Pop - mean(Total_Pop))^2)
for (i in 1:length(X_h)) {
v_y.hat[i] = MSE2*sqrt((1/g + 1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
IC.ex426c = matrix(nrow = length(X_h),ncol = 2)
rownames(IC.ex426c) = c("X_1","X_2","X_3")
colnames(IC.ex426c) = c("lower","upper")
for (i in 1:length(X_h)) {
IC.ex426c[i,] = y.hat[i] + c(-1,1)*B*v_y.hat[i]
}
IC.ex426c
table(Geographic_Region)
summary(Geographic_Region)
stem(Geographic_Region)
barplot(Geographic_Region)
hist(Geographic_Region)
barplot.default(Geographic_Region)
barplot(table(Geographic_Region))
barplot(table(Geographic_Region), xlab = Geographic_Region)
barplot(table(Geographic_Region))
193-174
174-19
which(Geographic_Region ==1)
flag = [which(Geographic_Region ==1)]
flag = which(Geographic_Region ==1)
flag
flag
rm(flag)
Total_Person_Inc[which(Geographic_Region ==1)]
lm(Total_Crimes ~ Total_Person_Inc[which(Geographic_Region ==1)])
typeof(Total_Crimes)
typeof(Total_Person_Inc)
lm(Total_Crimes ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)])
lm(Total_Crimes ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
k = lm(Total_Crimes ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
k = lm(Total_Crimes ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
k = lm(Total_Crimes ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
lm(Total_Crimes[which(Geographic_Region ==1)] ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
k = lm(Total_Crimes[which(Geographic_Region ==1)] ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
k
max(Geographic_Region)
modelo1 = vector("list",max(Geographic_Region))
modelo1
modelo1.ex629 = vector("list",max(Geographic_Region))
k= lm(Total_Crimes[which(Geographic_Region ==1)] ~ Total_Person_Inc[which(Geographic_Region ==1)])
k
k2 = lm(Total_Crimes[which(Geographic_Region ==1)] ~ data.matrix(Total_Person_Inc[which(Geographic_Region ==1)]))
k2
k2 == k1
k2 == k
k1
k
k[1]
k[[1]]
k[[1]][1]
k[[1]][1] == k2[[1]][1]
k[[1]][1] == k2[[1]][1]
Total_Pop/Land_Area[which(Geographic_Region==i)]
Total_Pop/Land_Area
Total_Pop/Land_Area[which(Geographic_Region==1)]
Total_Pop/Land_Area[which(Geographic_Region==1)]
b=Total_Pop/Land_Area
b[which(Geographic_Region==1)]
rm(b)
rm(k,k2)
Dens=Total_Pop/Land_Area
Dens
Dens[which(Geographic_Region==1)]
Dens[which(Geographic_Region==2)]
hd
Pct_HSG[which(Geographic_Region==i)]
Pct_HSG[which(Geographic_Region==i)
modelo1.ex629 = vector("list",max(Geographic_Region))
Dens=Total_Pop/Land_Area
for(i in 1:max(Geographic_Region)){
modelo1.ex629[[i]] = lm(Total_Crimes[which(Geographic_Region ==i)] ~ Total_Person_Inc[which(Geographic_Region ==i)] + Dens[which(Geographic_Region==i)] + Pct_HSG[which(Geographic_Region==i)])
}
modelo1.ex629
modelo1.ex629[1]
modelo1.ex629[[1]]
summary(modelo1.ex629)
summary(modelo1.ex629[1])$coef
modelo1.ex629$coef
modelo1.ex629
modelo1.ex629[1]
modelo1.ex629[2]
modelo1.ex629[3]
modelo1.ex629[4]
modelo1.ex629[5]
modelo1.ex629[6]
modelo1.ex629[7]
modelo1.ex629[[1]]
modelo1.ex629[[6]]
modelo1.ex629[[5]]
modelo1.ex629[[4]]
summary(modelo1.ex629[[1]])
summary(modelo1.ex629[1])
summary(modelo1.ex629[[1]])
summary(modelo1.ex629[[1]])
summary(modelo1.ex629[[1]])$coef
str(modelo1.ex629)
str(summary(modelo1.ex629))
str(summary(modelo1.ex629))
?pars
beta.ex629 = matrix(0,nrow=max(Geographic_Region),ncol=4)
beta.ex629
colnames(beta.ex629) = c("beta0","beta1","beta2","beta3")
rownames(beta.ex629) = c("regiao1","regiao2","regiao3","regiao4")
beta.ex629
modelo1.ex629
typeof(modelo1.ex629)
modelo1.ex629[1]
modelo1.ex629[[1]]
modelo1.ex629[[2]]
modelo1.ex629[[3]]
modelo1.ex629[[4]]
summary(modelo1.ex629[[4]])
summary(modelo1.ex629[[4]])
summary(modelo1.ex629[[4]])$coef
modelo1.ex629 = vector("list",max(Geographic_Region))
beta.ex629 = matrix(0,nrow=max(Geographic_Region),ncol=4)
colnames(beta.ex629) = c("beta0","beta1","beta2","beta3")
rownames(beta.ex629) = c("regiao1","regiao2","regiao3","regiao4")
Dens=Total_Pop/Land_Area
for(i in 1:max(Geographic_Region)){
modelo1.ex629[[i]] = lm(Total_Crimes[which(Geographic_Region ==i)] ~ Total_Person_Inc[which(Geographic_Region ==i)] + Dens[which(Geographic_Region==i)] + Pct_HSG[which(Geographic_Region==i)])
beta.ex629[i,] = summary(modelo1.ex629[[i]])$coef[i,1]
}
beta.ex629
round(beta.ex629,digits = 6)
round(beta.ex629,digits = 5)
round(beta.ex629,digits = 4)
round(beta.ex629,digits = 3)
beta_rounded = round(beta.ex629,digits = 3)
beta_rounded[1,1]
View(beta_rounded)
k= lm(Total_Crimes[which(Geographic_Region ==1)] ~ Total_Person_Inc[which(Geographic_Region ==1)] + Dens[which(Geographic_Region==1)] + Pct_HSG[which(Geographic_Region==1)])
k
k= lm(Total_Crimes[which(Geographic_Region ==2)] ~ Total_Person_Inc[which(Geographic_Region ==2)] + Dens[which(Geographic_Region==2)] + Pct_HSG[which(Geographic_Region==2)])
k
k
modelo1.ex629 = vector("list",max(Geographic_Region))
beta.ex629 = matrix(0,nrow=max(Geographic_Region),ncol=4)
colnames(beta.ex629) = c("beta0","beta1","beta2","beta3")
rownames(beta.ex629) = c("regiao1","regiao2","regiao3","regiao4")
Dens=Total_Pop/Land_Area
for(i in 1:max(Geographic_Region)){
modelo1.ex629[[i]] = lm(Total_Crimes[which(Geographic_Region ==i)] ~ Dens[which(Geographic_Region==i)] +  Total_Person_Inc[which(Geographic_Region ==i)] + Pct_HSG[which(Geographic_Region==i)])
beta.ex629[i,] = summary(modelo1.ex629[[i]])$coef[i,1]
}
(round(beta.ex629,digits = 3))
modelo1.ex629[[i]]
summary(modelo1.ex629[[i]])$coef
summary(modelo1.ex629[[1]])$coef
beta.ex629[1,] = summary(modelo1.ex629[[1]])$coef[1,1]
beta.ex629
k=summary(modelo1.ex629[[i]])$coef[i,1]
k
(round(beta.ex629,digits = 3))
(round(beta.ex629,digits = 3))
for(i in 1:max(Geographic_Region)){
modelo1.ex629[[i]] = lm(Total_Crimes[which(Geographic_Region ==i)] ~ Dens[which(Geographic_Region==i)] +  Total_Person_Inc[which(Geographic_Region ==i)] + Pct_HSG[which(Geographic_Region==i)])
beta.ex629[i,] = coef(modelo1.ex629[[i]])
}
(round(beta.ex629,digits = 3))
sumamary(modelo1.ex629[[1]])
summary(modelo1.ex629[[1]])
library(cars)
library(mtcars)
data(cars)
summary(cars)
head(cars)
k= lm(speed ~ dist)
k= lm(speed ~ dist, data=cars)
k
summary(k)
summary(k)$residuals
n=nrow(CDI)
v_y.hat = rep(0,length=length(X_h))
MSE2 = summary(beta.ex426)$sigma
Sxx  = sum((Total_Pop - mean(Total_Pop))^2)
for (i in 1:length(X_h)) {
v_y.hat[i] = MSE2*sqrt((1/g + 1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
IC.ex426c = matrix(nrow = length(X_h),ncol = 2)
rownames(IC.ex426c) = c("X_1","X_2","X_3")
colnames(IC.ex426c) = c("lower","upper")
for (i in 1:length(X_h)) {
IC.ex426c[i,] = y.hat[i] + c(-1,1)*B*v_y.hat[i]
}
IC.ex426c
n=nrow(CDI)
v_y.hat = rep(0,length=length(X_h))
MSE2 = summary(beta.ex426)$sigma
Sxx  = sum((Total_Pop - mean(Total_Pop))^2)
for (i in 1:length(X_h)) {
v_y.hat[i] = MSE2*sqrt(( 1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
IC.ex426c = matrix(nrow = length(X_h),ncol = 2)
rownames(IC.ex426c) = c("X_1","X_2","X_3")
colnames(IC.ex426c) = c("lower","upper")
for (i in 1:length(X_h)) {
IC.ex426c[i,] = y.hat[i] + c(-1,1)*B*v_y.hat[i]
}
IC.ex426c
n=nrow(CDI)
v_y.hat = rep(0,length=length(X_h))
MSE2 = summary(beta.ex426)$sigma
Sxx  = sum((Total_Pop - mean(Total_Pop))^2)
for (i in 1:length(X_h)) {
v_y.hat[i] = MSE2*sqrt((1/g +1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
IC.ex426c = matrix(nrow = length(X_h),ncol = 2)
rownames(IC.ex426c) = c("X_1","X_2","X_3")
colnames(IC.ex426c) = c("lower","upper")
for (i in 1:length(X_h)) {
IC.ex426c[i,] = y.hat[i] + c(-1,1)*B*v_y.hat[i]
}
IC.ex426c
for (i in 1:length(X_h)) {
v_y.hat[i] = MSE2*sqrt((1/g +1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
for (i in 1:length(X_h)) {
v_y.hat[i] = MSE2*sqrt((1/n + (X_h[i]-mean(Total_Pop))^2/Sxx))
}
v_y.hat
r2 = seq(1:3,0)
r2 = seq(1:3)
r2
?rep
r2 = rep(0,times=length(Geographic_Region))
r2
r2 = rep(0,times=max(Geographic_Region))
r2
summary(modelo1.ex629[[1]])$r.squared
summary(modelo1.ex629[[2]])$r.squared
summary(modelo1.ex629[[1]])$sigma
summary(modelo1.ex629[[1]])$sigma^2
r2 = rep(0,times=max(Geographic_Region))
MSE.ex629 = rep(0,times=max(Geographic_Region))
for(i in 1:max(Geographic_Region)){
r2[i] = summary(modelo1.ex629[[i]])$r.squared
MSE.ex629[i] = summary(modelo1.ex629[[i]])$sigma^2
}
r2
MSE.ex629
rbin(r2,MSE.ex629)
rbind(r2,MSE.ex629)
round(rbind(r2,MSE.ex629))
round(rbind(r2,MSE.ex629), digits=5)
round(rbind(r2,MSE.ex629), digits=4)
round(rbind(r2,MSE.ex629), digits=3)
round(rbind(r2,MSE.ex629), digits=2)
round(rbind(r2,MSE.ex629), digits=3)
round(rbind(r2,MSE.ex629), digits=2)
colnames(round(rbind(r2,MSE.ex629), digits=2)) = c("X1","X1","X1","X1")
round(rbind(r2,MSE.ex629), digits=2)
tralala = round(rbind(r2,MSE.ex629), digits=2)
colnames(tralala) = c("X1","X1","X1","X1")
tralala
modelo1.ex629[[1]]
modelo1.ex629[[1]]$residuals
boxplot(modelo1.ex629[[1]]$residuals)
boxplot(modelo1.ex629[[2]]$residuals)
boxplot(modelo1.ex629[[3]]$residuals)
boxplot(modelo1.ex629[[4]]$residuals)
?boxplot
par(pty="s")
par(mfrow = c(2,2))
for(i in 1:max(Geographic_Region)){
boxplot(modelo1.ex629[[i]]$residuals, range=1.5)
}
for(i in 1:max(Geographic_Region)){
boxplot(modelo1.ex629[[i]]$residuals, range=10)
}
par(pty="s")
par(mfrow = c(2,2))
for(i in 1:max(Geographic_Region)){
boxplot(modelo1.ex629[[i]]$residuals, range=30)
}
par(pty="s")
par(mfrow = c(2,2))
for(i in 1:max(Geographic_Region)){
boxplot(modelo1.ex629[[i]]$residuals ~ table(Geographic_Region), range=30 )
}
?par
head(modelo1.ex629[[1]]$residuals)
head(scale(modelo1.ex629[[1]]$residuals)
head(scale(modelo1.ex629[[1]]$residuals))
head(scale(modelo1.ex629[[1]]$residuals)/sqrt(dim(modelo1.ex629[[1]]$residuals) -1))
head(scale(modelo1.ex629[[1]]$residuals)/sqrt(dim(modelo1.ex629[[1]]$residuals)[1] -1))
dim(modelo1.ex629[[1]]$residuals)
modelo1.ex629[[1]]$residuals
dim(modelo1.ex629[[1]]$residuals)
head(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals)[1] -1))
modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)
scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)
tail(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1))
scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)[1,]
scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)[,1]
scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)
str(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1))
as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1))
as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1), scale(modelo1.ex629[[2]]$residuals)/sqrt(length(modelo1.ex629[[2]]$residuals) -1),scale(modelo1.ex629[[3]]$residuals)/sqrt(length(modelo1.ex629[[3]]$residuals) -1),scale(modelo1.ex629[[4]]$residuals)/sqrt(length(modelo1.ex629[[4]]$residuals) -1))
as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1))
as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1),scale(modelo1.ex629[[4]]$residuals)/sqrt(length(modelo1.ex629[[4]]$residuals) -1))
boxplot(as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)), as.data.frame(scale(modelo1.ex629[[2]]$residuals)/sqrt(length(modelo1.ex629[[2]]$residuals) -1)), as.data.frame(scale(modelo1.ex629[[3]]$residuals)/sqrt(length(modelo1.ex629[[3]]$residuals) -1)), as.data.frame(scale(modelo1.ex629[[4]]$residuals)/sqrt(length(modelo1.ex629[[4]]$residuals) -1))
boxplot(as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1)), as.data.frame(scale(modelo1.ex629[[2]]$residuals)/sqrt(length(modelo1.ex629[[2]]$residuals) -1)), as.data.frame(scale(modelo1.ex629[[3]]$residuals)/sqrt(length(modelo1.ex629[[3]]$residuals) -1)), as.data.frame(scale(modelo1.ex629[[4]]$residuals)/sqrt(length(modelo1.ex629[[4]]$residuals) -1)))
a1 = as.data.frame(scale(modelo1.ex629[[1]]$residuals)/sqrt(length(modelo1.ex629[[1]]$residuals) -1))
a1
a2
a2 = as.data.frame(scale(modelo1.ex629[[2]]$residuals)/sqrt(length(modelo1.ex629[[2]]$residuals) -1))
a3 = as.data.frame(scale(modelo1.ex629[[3]]$residuals)/sqrt(length(modelo1.ex629[
a3 = as.data.frame(scale(modelo1.ex629[[3]]$residuals)/sqrt(length(modelo1.ex629[[3]]$residuals) -1))
a3 = as.data.frame(scale(modelo1.ex629[[3]]$residuals)/sqrt(length(modelo1.ex629[[3]]$residuals) -1))
a4 = as.data.frame(scale(modelo1.ex629[[4]]$residuals)/sqrt(length(modelo1.ex629[[4]]$residuals) -1))
a1
a2
a3
a4
hist(a1)
typeof(a1)
hist(a1$V1)
rm(a1,a2,a3,a4)
hist(modelo1.ex629[[1]]$residuals)
hist(modelo1.ex629[[2]]$residuals)
hist(modelo1.ex629[[3]]$residuals)
hist(modelo1.ex629[[4]]$residuals)
plot(modelo1.ex629[[1]]$residuals,Dens)
plot(modelo1.ex629[[1]]$residuals,Dens[which(Geographic_Region==1)])
plot(modelo1.ex629[[2]]$residuals,Dens[which(Geographic_Region==2)])
plot(Dens[which(Geographic_Region==1)],modelo1.ex629[[1]]$residuals)
plot(Dens[which(Geographic_Region==2)],modelo1.ex629[[2]]$residuals)
plot(Dens[which(Geographic_Region==3)],modelo1.ex629[[3]]$residuals)
plot(Dens[which(Geographic_Region==4)],modelo1.ex629[[4]]$residuals)
boxplot(modelo1.ex629[[1]]$residuals,modelo1.ex629[[2]]$residuals,modelo1.ex629[[3]]$residuals,modelo1.ex629[[1]]$residuals, range=5, names=c("regiao 1","regiao 2","regiao 3","regiao 4"))
par(pty="s")
par(mfrow = c(2,3))
plot(x = Total_Pop, y = num_Phys, xlab = "Populacao Total" , ylab = "Numero de Medicos")
plot(Land_Area,num_Phys, xlab = "Area", ylab = "Numero de Medicos")
plot(Total_Person_Inc,num_Phys, xlab = "Renda Per Capita", ylab = "Numero de Medicos")
plot(dens_Pop,num_Phys, xlab = "Densidade Populacional", ylab = "Numero de Medicos")
plot(Pct_65Plus,num_Phys, xlab = "Percentagem Populacao Acima de 65 Anos", ylab = "Numero de Medicos")
plot(Total_Person_Inc,num_Phys, xlab = "Renda Per Capita", ylab = "Numero de Medicos")
par(mfrow = c(4,3))
cor(Total_Pop,Total_Person_Inc)
par(mfrow = c(2,3))
hd = c("ID", "County", "State", "Land_Area", "Total_Pop", "Pct_18_34", "Pct_65Plus", "num_Phys", "num_Beds", "Total_Crimes", "Pct_HSG", "Pct_Bdgree", "Pct_Below_Poverty_Level", "Pct_Unemployment", "PCI", "Total_Person_Inc", "Geographic_Region")
CDI = read.table(file = "/home/leouchoa/Documents/papers/2016-1/regressao/codes/teste07/APPENC02.txt", header=F, col.names = hd)
#CDI = read.table(file = "http://www.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Appendix%20C%20Data%20Sets/APPENC02.txt", header=F, col.names = hd)
attach(CDI)
which(Geographic_Region ==1)
dados$5/dados$4
View(CDI)
head(dos)
head(dados)
CDI$Total_Pop/CDI$Land_Area
head(CDI$Total_Pop/CDI$Land_Area)
attach(CDI)
p = lm(Total_Crimes[which(Geographic_Region ==1)] ~ Dens[which(Geographic_Region==1)] +  Total_Person_Inc[which(Geographic_Region ==1)] + Pct_HSG[which(Geographic_Region==1)])
Dens = Total_Crimes/Land_Area
p = lm(Total_Crimes[which(Geographic_Region ==1)] ~ Dens[which(Geographic_Region==1)] +  Total_Person_Inc[which(Geographic_Region ==1)] + Pct_HSG[which(Geographic_Region==1)])
p
p = lm(Total_Crimes[which(Geographic_Region ==1)] ~ Dens[which(Geographic_Region==1)] +  Total_Person_Inc[which(Geographic_Region ==1)] + Pct_HSG[which(Geographic_Region==1)])
p
